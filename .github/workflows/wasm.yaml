name: Build WebAssembly version of fontbm

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build-wasm:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout with sub-modules
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    # 2. Install / cache Emscripten
    - name: Set up Emscripten
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: 3.1.56
        actions-cache: true

    # 3. Make sure the freetype & libpng ports exist in the cache
    - name: Build sysroot libraries
      run: |
        embuilder build freetype libpng

    # 4. Configure with explicit include / lib paths
    - name: Configure (CMake + emcmake)
      run: |
        mkdir -p build
        SYSROOT="$EMSDK/upstream/emscripten/cache/sysroot"
        LIBDIR="${SYSROOT}/lib/wasm32-emscripten"
        emcmake cmake -S . -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DFREETYPE_INCLUDE_DIRS=${SYSROOT}/include/freetype2 \
          -DFREETYPE_LIBRARY=${LIBDIR}/libfreetype.a \
          -DPNG_PNG_INCLUDE_DIR=${SYSROOT}/include \
          -DPNG_LIBRARY=${LIBDIR}/libpng16.a \
          -DCMAKE_CXX_FLAGS="-s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1 -s EXIT_RUNTIME=1" \
          -DFONTBM_SKIP_WIN32_CONSOLE=ON

    # 5. Build
    - name: Build
      run: cmake --build build --parallel

    # 6. Collect outputs
    - name: Copy artifacts
      run: |
        mkdir dist
        cp build/fontbm.{js,wasm} dist/

    # 7. Upload artifact
    - name: Upload fontbm.wasm
      uses: actions/upload-artifact@v4
      with:
        name: fontbm-wasm
        path: dist
